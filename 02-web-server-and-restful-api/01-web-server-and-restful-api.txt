SOAL

1.Apa perbedaan antara static web server dan dynamic web server?
2.Jelaskan arsitektur static site dan dynamic site
3.Apa saja yang dapat kita buat pada sisi server?
4.Mohon jelaskan apa itu RESTful?
5.Apa saja jenis HTTP verbs yang ada (jelaskan fungsinya masing-masing)
6.Apa fungsi dari Response Codes?


JAWABAN
1.static web server dan dynamic web server
- Website statis tidak memerlukan database yang besar karena pengguna tidak perlu melakukan penyimpanan berbagai macam data yang penting maupun memproses data. 
- Website dinamis memerlukan database yang digunakan untuk menyimpan data atau memproses data.
2.arsitektur static site dan dynamic site
 - Arsitektur dari static site adalah browser akan melakukan request ke web server, di dalam web server tersebut terdapat file html, css, javascript dan file pendukung lainnya, kemudian server akan mengirimkan response file tersebut ke browser.
 - Arsitektur dari dynamic site adalah seperti berikut ini client melakukan request ke web server dengan request methodnya yang kemudian masuk ke web server dan diarahkan ke web application, di dalam web application akan ada processing data sesuai dengan methodnya untuk dikomunikasikan ke database, kalau get maka akan dilakukan pengambilan data dari database, data yang sudah didapatkan tersebut akan disematkan di dalam html kemudian diberikan ke web server bersama dengan static resource yang ada, baru akhirnya diberikan response ke client dan tampil di browserny
3. sisi server
    - menyimpan data user/ pengguna
    - Pengontrolan akses terhadap konten yang disediakan, akses terhadap konten dibatasi hanya untuk pengguna yang telah login atau yang memiliki akses
    - Penyimpanan informasi session/state
4.- Restful merupakan sebuah arsitektur yang menyediakan standar komunikasi antar sistem computer di web dan menggunakan protokol HTTP untuk komunikasinya, restful memungkinkan implementasi client dan server dibuat secara independen atau terpisah. RESTful mengidentifikasi setiap resource yang ada dengan menggunakan URI dan direpresentasikan dalam bentuk format teks, JSON atau XML. Setiap kali client request harus menyertakan semua data dan parameter dengan lengkap ketika mengakses suatu endpoint.
5. jenis HTTP
    - GET : Digunakan untuk meminta resource ke sebuah server/ memanggil sebuah data yang ditampilkan
    - POST, menambahkan entitas baru pada resource yang ditentukan / membuat sebuah data baru
    - PUT, memperbarui atau mengganti suatu entitas dari target resource/ update sebuah data 
    - DELETE, menghapus resource yang ditentukan/ menghapus data 
6. - Response codes berfungsi untuk menunjukkan pada client informasi apakah operasi dari request yang diberikan berhasil diproses atau tidak